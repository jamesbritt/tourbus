#!/usr/bin/env ruby
require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'common'))
require 'trollop'
require_all_files_in_folder 'tours'

# load config file, we'll use these as defaults
config_file = ["./tourbus.yml", "./tours/tourbus.yml", "./config/tourbus.yml", "~/tourbus.yml"].map {|p| File.expand_path(p)}.find {|p| File.exists? p}
config = config_file ? YAML::load_file(config_file).symbolize_keys : {}

config_map = { :host => :to_s, :concurrency => :to_i, :number => :to_i, :rand => :to_i, :tests => :to_s }
config_map.each {|key,conv| config[key] = config[key].send(conv) if config.key? key }

# defaults
config[:host] ||= "localhost:3000"
config[:concurrency] ||= 1
config[:number] ||= 1
config[:rand] ||= nil

opts = Trollop.options do
  opt :host, "Remote hostname to test", :default => config[:host]
  opt :concurrency, "Number of simultaneous runs to perform", :type => :integer, :default => config[:concurrency]
  opt :number, "Number of times to run the tour (in each concurrent step, so -c 10 -n 10 will run the tour 100 times)", :type => :integer, :default => config[:number]
  opt :list, "List tours and runs available. If tours or runs are included, filters the list", :type => :boolean, :default => nil
  opt :rand, "Random seed", :type => :integer, :default => config[:rand]
  opt :tests, "Test name(s) filter. The name of the test to run (use --list to see the test names). Use commas, no spaces, for mulitple names",  :type => :string, :default => nil
end

tours = if ARGV.empty?
          Tour.tours
         else
           ARGV
         end

srand opts[:rand] || Time.now.to_i

if opts[:list]
  Tour.tours(ARGV).each do |tour|
    puts tour
    puts Tour.tests(tour).map {|test| "  #{test}"}
  end
else
  opts[:tests] = opts[:tests].split(',') if opts[:tests] 
  
  TourBus.new(opts[:host], opts[:concurrency], opts[:number], tours, opts[:tests]).run
end

